# If this is your first time writing a language grammar, check out:
#   - http://manual.macromates.com/en/language_grammars

'scopeName': 'source.zscript'
'name': 'Zelda Classic ZScript'
'fileTypes': [
  'z'
  'zh'
]
'patterns': [
  {
    'match': '\\b(import|const)\\b'
    'name': 'keyword.directive.zscript'
  }
  {
    'match': '\\b(if|else|while|for|break|continue|do|return)\\b'
    'name': 'keyword.control.zscript'
  }
  {
    'match': '\\b(global|script|item|ffc)\\b'
    'name': 'keyword.script.zscript'
  }
  {
    'match': '\\b(int|float|bool|ffc|[el]weapon|item(data)?|npc|void)\\b'
    'name': 'storage.type.var.zscript'
  }
  {
    'match': '\\b(true|false)\\b'
    'name': 'constant.language.boolean.$1.zscript'
  }
  {
    'match': '\\bnull\\b'
    'name': 'constant.language.null.zscript'
  }
  {
    'match': '\\b(Abs|(Arc|Radian)?(Cos|Sin|Tan)|Factorial|(Inv)?Pow|Ln|Log10|Max|Min|Rand|Sqrt)\\b'
    'name': 'support.function.math.zscript'
  }
  {
    'match': '\\b(ClearTile|ClearTrace|CopyTile|SwapTile)\\b'
    'name': 'support.function.data.zscript'
  }
  {
    'match': '\\b(Quit|Waitframe|Waitdraw)\\b'
    'name': 'support.function.control.zscript'
  }
  {
    'match': '\\b(SizeOfArray|Trace(B|NL|S|ToBase)?)\\b'
    'name': 'support.function.zscript'
  }
  {
    'match': '\\b(Screen|Link|Game)\\b'
    'name': 'support.namespace.zscript'
  }
  # TODO: scrape from zscript.txt
  # {
  #   'begin': '\\bLink\\s*->\\s*'
  #   'end': ''
  # }
  {
    'match': ';'
    'name': 'punctuation.terminator.statement.js'
  }
  {
    'match': ','
    'name': 'meta.delimiter.object.comma.zscript'
  }
  {
    'match': '->'
    'name': 'meta.delimiter.method.arrow.js'
  }
  {
    'include': '#numbers'
  }
  {
    'include': '#operators'
  }
  {
    'include': '#strings'
  }
  {
    'begin': '{'
    'beginCaptures':
      '0':
        'name': 'meta.brace.curly.zscript'
    'end': '}'
    'endCaptures':
      '0':
        'name': 'meta.brace.curly.zscript'
    'patterns': [
      {
        'include': '$self'
      }
    ]
  }
  {
    'begin': '\\('
    'beginCaptures':
      '0':
        'name': 'meta.brace.round.zscript'
    'end': '\\)'
    'endCaptures':
      '0':
        'name': 'meta.brace.round.zscript'
    'patterns': [
      {
        'include': '$self'
      }
    ]
  }
  {
    'match': '\\[|\\]'
    'name': 'meta.brace.square.zscript'
  }
  {
    'include': '#comments'
  }
  {
    'match': '^\\s+'
    'name': 'meta.indentation.zscript'
  }
]
'repository':
  'numbers':
    'patterns': [
      {
        'match': '\\b0(x|X)[0-9a-fA-F]+\\b'
        'name': 'constant.numeric.hex.zscript'
      }
      {
        'match': '\\b0(b|B)[01]+\\b'
        'name': 'constant.numeric.binary.zscript'
      }
      {
        'match': '\\b0(o|O)?[0-7]+\\b'
        'name': 'constant.numeric.octal.zscript'
      }
      {
        'match': '\\b\\d+\\b'
        'name': 'constant.numeric.decimal.zscript'
      }
      {
        'match': '\\b\\d+\\.\\d+\\b'
        'name': 'constant.numeric.float.zscript'
      }
    ]
  'operators':
    'patterns': [
      {
        'match': '(%|\\+|-|\\*|%)='
        'name': 'keyword.operator.assignment.compound.zscript'
      }
      {
        'match': '(&|\\^|<<|>>|\\|)='
        'name': 'keyword.operator.assignment.compound.bitwise.zscript'
      }
      {
        'match': '(&&|^^|\\|\\|)='
        'name': 'keyword.operator.assignment.compound.logical.zscript'
      }
      {
        'match': '<<|>>'
        'name': 'keyword.operator.bitwise.shift.zscript'
      }
      {
        'match': '!=|<=|>=|==|<|>'
        'name': 'keyword.operator.comparison.zscript'
      }
      {
        'match': '&&|^^|!|\\|\\|'
        'name': 'keyword.operator.logical.zscript'
      }
      {
        'match': '&|\\||\\^|~'
        'name': 'keyword.operator.bitwise.zscript'
      }
      {
        'match': '='
        'name': 'keyword.operator.assignment.zscript'
      }
      {
        'match': '--'
        'name': 'keyword.operator.decrement.zscript'
      }
      {
        'match': '\\+\\+'
        'name': 'keyword.operator.increment.zscript'
      }
      {
        'match': '%|\\*|/|-|\\+'
        'name': 'keyword.operator.arithmetic.zscript'
      }
    ]
  'strings':
    'patterns': [
      {
        'begin': '"'
        'beginCaptures':
          '0':
            'name': 'punctuation.definition.string.begin.zscript'
        'end': '"'
        'endCaptures':
          '0':
            'name': 'punctuation.definition.string.end.zscript'
        'name': 'string.quoted.double.zscript'
        'patterns': [
          {
            'include': '#string_escapes'
          }
          {
            'match': '[^"]*[^\\n\\r"\\\\]$'
            'name': 'invalid.illegal.string.szcript'
          }
        ]
      }
    ]
  'string_escapes':
    'patterns': [
      {
        'match': '\\[0n\'"]'
        'name': 'constant.character.escape.zscript'
      }
    ]
  'function_body':
    'patterns': [
      {
        'begin': '{'
        'beginCaptures':
          '0':
            'name': 'punctuation.definition.function.body.begin.bracket.curly.zscript'
        'end': '}'
        'endCaptures':
          '0':
            'name': 'punctuation.definition.function.body.end.bracket.curly.zscript'
        'patterns': [
          {
            'include': '$self'
          }
        ]
      }
    ]
  'comments':
    'patterns': [
      {
        'begin': '//'
        'beginCaptures':
          '0':
            'name': 'punctuation.definition.comment.zscript'
        'end': '$'
        'name': 'comment.line.double-slash.zscript'
      }
    ]
